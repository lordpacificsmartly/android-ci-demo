name: Android CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:

jobs:
  # ----------------------------
  # 1. Build job
  # ----------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run ktlint
        run: ./gradlew ktlintCheck --stacktrace
      - name: Run detekt
        run: ./gradlew detekt --stacktrace
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace --info
      - name: Run Unit Tests
        run: ./gradlew test --stacktrace
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/**/*.apk

  # ----------------------------
  # 2. Instrumented tests (Firebase Test Lab)
  # ----------------------------
  instrumented:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Build Instrumented Test APKs
        run: ./gradlew assembleDebug assembleAndroidTest
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
      - name: List available FTL devices
        run: gcloud firebase test android models list
      - name: Run tests in Firebase Test Lab
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app app/build/outputs/apk/debug/app-debug.apk \
            --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=Pixel2.arm,version=29,locale=en,orientation=portrait \
            --timeout 10m

  # ----------------------------
  # 3. Notify job (Email)
  # ----------------------------
  notify:
    runs-on: ubuntu-latest
    needs: [build, instrumented]
    if: always()  # send Slack even if a previous job fails
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
           {
            "text": "*Android CI/CD Workflow Result* :rocket:\n✅ Build + Lint + Detekt\n✅ Unit Tests\n✅ Instrumented Tests (Firebase Test Lab)"
           }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ----------------------------
  # 4. Deploy job (Google Play) - LAST
  # ----------------------------
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [notify]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 17
#      - name: Build Release APK
#        run: ./gradlew assembleRelease
#      - name: Upload to Google Play
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON }}
#          packageName: com.example.myapp   # <-- replace with your app's package name
#          releaseFile: app/build/outputs/apk/release/app-release.apk
#          track: internal
